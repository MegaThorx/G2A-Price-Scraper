doc = GET(c(website))
c("hello", " jack")
c("hello" | " jack")
c("hello" + " jack")
c("hello", " jack")
c("hello jack")
c(hello jack)
c('hello', ' jack')
paste("hello", " jack")
getSingleGamePrice = function(gameURL, gameID){
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html'))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
prodName = getNodeSet(docTree, "//div//h1/text()")[[1]]
selectedOffer = getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]]
gameRegion = getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]]
gameRating = getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
}
my_list
my_list[[]]
my_list = c()
my_list['test']
my_list['test'] = "fart"
my_list
my_list['test2'] = "dupe"
my_list
my_list['test2']
my_list[['test2']]
my_list[['test2']] = "dupe"
my_list[['test2']]
getSingleGamePrice = function(gameURL, gameID){
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html'))
gatheredData = c()
gatheredData['docTree'] = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = getNodeSet(docTree, "//div//h1/text()")[[1]]
gatheredData['selectedOffer'] = getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]]
gatheredData['gameRegion'] = getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]]
gatheredData['gameRating'] = getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
return(gatheredData)
}
getSingleGamePrice = function(gameTitleURL){
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html'))
gatheredData = c()
gatheredData['docTree'] = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = getNodeSet(docTree, "//div//h1/text()")[[1]]
gatheredData['selectedOffer'] = getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]]
gatheredData['gameRegion'] = getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]]
gatheredData['gameRating'] = getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
suppressMessages(library(httr))
suppressMessages(library(RCurl))
suppressMessages(library(XML))
suppressMessages(library(RSQLite))
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
getSingleGamePrice = function(gameTitleURL){
gatheredData = c()
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html'))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = getNodeSet(docTree, "//div//h1/text()")[[1]]
gatheredData['selectedOffer'] = getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]]
gatheredData['gameRegion'] = getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]]
gatheredData['gameRating'] = getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
getSingleGamePrice = function(gameTitleURL){
gatheredData = c()
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html'))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = getNodeSet(docTree, "//div//h1/text()")[[1]]
gatheredData['selectedOffer'] = getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]]
gatheredData['gameRegion'] = getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]]
gatheredData['gameRating'] = getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
#getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html'))
doc
paste('http://www.g2a.com/', gameTitleURL, '.html', collapse = NULL)
paste('http://www.g2a.com/', gameTitleURL, '.html', collapse = "")
paste('http://www.g2a.com/', gameTitleURL, '.html',sep = NULL)
paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
doc
getSingleGamePrice = function(gameTitleURL){
gatheredData = c()
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = getNodeSet(docTree, "//div//h1/text()")[[1]]
gatheredData['selectedOffer'] = getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]]
gatheredData['gameRegion'] = getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]]
gatheredData['gameRating'] = getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
#getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData = c()
gatheredData['prodName'] = getNodeSet(docTree, "//div//h1/text()")[[1]]
getNodeSet(docTree, "//div//h1/text()")[[1]]
gatheredData['prodName'] = paste(getNodeSet(docTree, "//div//h1/text()")[[1]])
getNodeSet(docTree, "//div//h1/text()")[[1]]
getNodeSet(docTree, "//div//h1/text()")[[1]]
typeof(getNodeSet(docTree, "//div//h1/text()")[[1]])
type.convert(getNodeSet(docTree, "//div//h1/text()")[[1]])
typeof("h")
typeof(getNodeSet(docTree, "//div//h1/text()"))
typeof(getNodeSet(docTree, "//div//h1/text()")[1])
typeof(getNodeSet(docTree, "//div//h1/text()")[[1]])
getNodeSet(docTree, "//div//h1/text()")[[1]]
getNodeSet(docTree, "//div//h1/text()")
getNodeSet(docTree, "//div//h1/text()")[[1]]
str(getNodeSet(docTree, "//div//h1/text()")[[1]])
paste(getNodeSet(docTree, "//div//h1/text()")[[1]])
as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
getSingleGamePrice = function(gameTitleURL){
gatheredData = c()
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData['selectedOffer'] = as(getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
gatheredData['gameRating'] = as(getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]],"character")
#getNodeSet(docTree, "//link[@href = 'https://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html']")[[1]]
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
gatheredData = c()
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData
gatheredData['selectedOffer'] = as(getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
gatheredData['gameRating'] = as(getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]],"character")
getNodeSet(docTree, "//span[@class = 'score']/text()")
getNodeSet(docTree, '//span[@class = "mp-Price"]/text()'))
getNodeSet(docTree, '//span[@class = "mp-Price"]/text()')
getNodeSet(docTree, '/span[@class = "mp-Price"]/text()')
GET(website)
getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))
GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
test = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
save(test)
save(test, file = "test.txt")
test
test[[1]]
test[[2]]
test[[3]]
test[[4]]
test[[5]]
test[[6]]
test[[7]]
test[[8]]
test[[9]]
test[[10]]
test[[11]]
test[[12]]
GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
save(GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))), file='test.txt')
GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
save(GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = ""))), file='test.txt')
test
test[[1]]
test[[0]]
test[[1]]
test[[2]]
gettext("http://www.g2a.com/dead-space-3-ea-origin-cd-key-global.html")
gettext(test)
save(gettext(test), file="test.txt")
test2 = gettext(test);
save(test2, file="test.txt")
save(test2, file="test.txt")
save(test2, file="test2.txt")
gettext(test)
suppressMessages(library(jsonlite))
body = '{ "query": [], "response": { "format": "json" } }')
req <- POST('http://www.g2a.com/marketplace/product/auctions/',  body = '{ "query": [], "response": { "format": "json" } }')
req
toJSON("'id': 28154, 'v': "0"")
toJSON("'id': "28154", 'v': "0"")
toJSON("'id': "28154", 'v': "0")
toJSON('id': "28154", 'v': "0")
toJSON
toJSON()
toJSON("test")
toText(toJSON("test"))
stop_for_status(req)
req <- POST("http://api.scb.se/OV0104/v1/doris/sv/ssd/START/PR/PR0101/PR0101A/KPIFastM2",
body = '{ "query": [], "response": { "format": "json" } }')
stop_for_status(req)
req <- POST('http://www.g2a.com/marketplace/product/auctions/',  body = '{ "query": [], "response": { "format": "json" } }')
stop_for_status(req)
POST
req <- GET('http://www.g2a.com/marketplace/product/auctions/',  body = '{ "query": [], "response": { "format": "json" } }')
stop_for_status(req)
json <- content(req, "text")
validate(json)
json <- substring(json, 2)
validate(json)
auctions = GET('http://www.g2a.com/marketplace/product/auctions/?id=28154&v=0')
auctions
auctions = GET('https://www.g2a.com/marketplace/product/auctions/?id=28154&v=0')
auctions
gettext(auctions)
gettextf(auctions)
json
fromJSON(gettextf(auctions))
fromJSON(gettext(auctions))
auctions =  fromJSON(gettext(GET('http://www.g2a.com/marketplace/product/auctions/?id=28154&v=0')))
auctions =  GET('http://www.g2a.com/marketplace/product/auctions/?id=28154&v=0')
auctions = fromJSON(gettext(auctions))
auctions =  GET('http://www.g2a.com/marketplace/product/auctions/?id=28154&v=0')
auctions =  GET('https://www.g2a.com/marketplace/product/auctions/?id=28154&v=0')
auctions = fromJSON(gettext(auctions))
auctions
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docPlainText
grep('a', docPlainText)
grep('c', docPlainText)
grep('c', docPlainText)[1]
grep('c', docPlainText)[[1]]
gregexpr('c', docPlainText)[[1]]
gregexpr('c', docPlainText)
gregexpr('productID', docPlainText)
gregexpr('productID', docPlainText)
regmatches('productID', docPlainText)
regexProdID = 'productID'
gregRegex = gregexpr(regexProdID, docPlainText)
regmatches(regexProdID, gregRegex)
regexProdID = 'productID'
gregRegex = gregexpr(regexProdID, docPlainText)
regmatches(docPlainText, gregRegex)
regexProdID = 'productID[[:space:]]*([0-9]+)'
gregRegex = gregexpr(regexProdID, docPlainText)
regmatches(docPlainText, gregRegex)
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = gregexpr(regexProdID, docPlainText)
regmatches(docPlainText, gregRegex)
regmatches(docPlainText, gregRegex)[[1]]
regmatches(docPlainText, gregRegex)[[2]]
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = gregexpr(regexProdID, docPlainText)
regmatches(docPlainText, gregRegex)
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
regmatches(docPlainText, gregRegex)
regmatches(docPlainText, gregRegex)[[1]]
regmatches(docPlainText, gregRegex)[[2]]
regmatches(docPlainText, gregRegex)[2]
regmatches(docPlainText, gregRegex)
test=regmatches(docPlainText, gregRegex)
regmatches(docPlainText, gregRegex)[1:2]
regmatches(docPlainText, gregRegex)[1:1]
regmatches(docPlainText, gregRegex)[2:1]
regmatches(docPlainText, gregRegex)[1]
typeof(regmatches(docPlainText, gregRegex))
typeof(regmatches(docPlainText, gregRegex))[1]
regmatches(docPlainText, gregRegex)
regmatches(docPlainText, gregRegex)[1]
regmatches(docPlainText, gregRegex)[[1]][1]
regmatches(docPlainText, gregRegex)[[1]][2]
typeof(regmatches(docPlainText, gregRegex)[[1]][2])
gatheredData = c()
gatheredData = c()
gameTitleURL = 'dead-space-3-ea-origin-cd-key-global'
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = "")
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
auctions
getSingleGamePrice = function(gameTitleURL){
gatheredData = c() # returned value
# grab the front page data. This doesn't get the prices, but this data doesn't change much so maybe make this not run every time?
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
# get the ProductID and to gather the list of prices. They're in their local conversion rates, so these have to be converted to USD and sorted to find the lowest value
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData['selectedOffer'] = as(getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
gatheredData['gameRating'] = as(getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]],"character")
gatheredData['lowestPrice'] = as(getNodeSet(docTree, '//span[@class = "mp-Price"]/text()'))
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
getSingleGamePrice = function(gameTitleURL){
gatheredData = c() # returned value
# grab the front page data. This doesn't get the prices, but this data doesn't change much so maybe make this not run every time?
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
# get the ProductID and to gather the list of prices. They're in their local conversion rates, so these have to be converted to USD and sorted to find the lowest value
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData['selectedOffer'] = as(getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
gatheredData['gameRating'] = as(getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]],"character")
gatheredData['lowestPrice'] = as(getNodeSet(docTree, '//span[@class = "mp-Price"]/text()'),"character")
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]]
as(getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]],"character")
getSingleGamePrice = function(gameTitleURL){
gatheredData = c() # returned value
# grab the front page data. This doesn't get the prices, but this data doesn't change much so maybe make this not run every time?
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
# get the ProductID and to gather the list of prices. They're in their local conversion rates, so these have to be converted to USD and sorted to find the lowest value
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData['selectedOffer'] = as(getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
gatheredData['gameRating'] = as(getNodeSet(docTree, "//span[@class = 'score']/text()")[[1]],"character")
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
getSingleGamePrice = function(gameTitleURL){
gatheredData = c() # returned value
# grab the front page data. This doesn't get the prices, but this data doesn't change much so maybe make this not run every time?
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
# get the ProductID and to gather the list of prices. They're in their local conversion rates, so these have to be converted to USD and sorted to find the lowest value
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData['selectedOffer'] = as(getNodeSet(docTree, "//div[@class = 'selected-price']/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
test = getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
test
test['prodName']
getSingleGamePrice = function(gameTitleURL){
# returned value
gatheredData = c()
# grab the front page data. This doesn't get the prices, but this data doesn't change much so maybe make this not run every time?
doc = GET(getRelativeURL(paste('http://www.g2a.com/', gameTitleURL, '.html',sep = "")))
docPlainText = gettext(doc)
docTree = htmlTreeParse(doc, useInternalNodes = TRUE)
# get the ProductID and to gather the list of prices. They're in their local conversion rates, so these have to be converted to USD and sorted to find the lowest value
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
gatheredData['prodName'] = as(getNodeSet(docTree, "//div//h1/text()")[[1]],"character")
gatheredData['gameRegion'] = as(getNodeSet(docTree, "//div[@class = 'game-info-content']/text()")[[8]],"character")
return(gatheredData)
}
getSingleGamePrice('dead-space-3-ea-origin-cd-key-global')
regexProdID = 'productID[[:space:]]*=[[:space:]]*([0-9]+)'
gregRegex = regexec(regexProdID, docPlainText)
gatheredData['prodID'] = regmatches(docPlainText, gregRegex)[[1]][2]
auctions =  GET(paste('https://www.g2a.com/marketplace/product/auctions/?id=',gatheredData['prodID'],'&v=0',sep = ""))
auctions = fromJSON(gettext(auctions))
typeof(auctions)
auctions
